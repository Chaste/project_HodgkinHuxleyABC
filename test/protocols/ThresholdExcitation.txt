# Test membrane response to membrane depolarizations insufficient to trigger an action potential
# (experiment suggested in Hodgkin-Huxley 1952, Fig. 21)

namespace oxmeta = "https://chaste.comlab.ox.ac.uk/cellml/ns/oxford-metadata#"
namespace aidan = "urn:aidan#"

inputs {
    # Holding potential to apply before simulating the voltage clamp.
    resting_potential = -75
    depol = 2

    # Default parameter values for exponential equations for alpha/beta
    ank1 = 0.01
    ank2 = 10
    ank3 = 10
    bnk1 = 0.125
    bnk2 = 80
    amk1 = 0.1
    amk2 = 25
    amk3 = 10
    bmk1 = 4
    bmk2 = 18
    ahk1 = 0.07
    ahk2 = 20
    bhk1 = 30
    bhk2 = 10
}

units {
    mV = milli volt
    ms = milli second
    milliS_per_cm2 = milli siemens . centi metre^-2
}

model interface {
    input oxmeta:membrane_voltage units mV

    output oxmeta:membrane_voltage units mV
    output oxmeta:time units ms # Needed to stop solver falling over

    # Parameters for exponential equations for alpha/beta
    input aidan:potassium_channel_n_gate_alpha_k1
    input aidan:potassium_channel_n_gate_alpha_k2
    input aidan:potassium_channel_n_gate_alpha_k3
    input aidan:potassium_channel_n_gate_beta_k1
    input aidan:potassium_channel_n_gate_beta_k2
    input aidan:membrane_fast_sodium_current_m_gate_alpha_k1
    input aidan:membrane_fast_sodium_current_m_gate_alpha_k2
    input aidan:membrane_fast_sodium_current_m_gate_alpha_k3
    input aidan:membrane_fast_sodium_current_m_gate_beta_k1
    input aidan:membrane_fast_sodium_current_m_gate_beta_k2
    input aidan:membrane_fast_sodium_current_h_gate_alpha_k1
    input aidan:membrane_fast_sodium_current_h_gate_alpha_k2
    input aidan:membrane_fast_sodium_current_h_gate_beta_k1
    input aidan:membrane_fast_sodium_current_h_gate_beta_k2

    clamp oxmeta:membrane_stimulus_current to 0 :: microA_per_cm2
    output aidan:membrane_effective_fast_sodium_current_conductance units milliS_per_cm2
    output aidan:membrane_effective_potassium_current_conductance units milliS_per_cm2
}

tasks {
    # Run to steady-state in case of change in alpha/beta parameterization
    simulation prep = timecourse {
        range time units ms uniform 0:100:10000
        modifiers {
            at start set aidan:potassium_channel_n_gate_alpha_k1 = ank1
            at start set aidan:potassium_channel_n_gate_alpha_k2 = ank2
            at start set aidan:potassium_channel_n_gate_alpha_k3 = ank3
            at start set aidan:potassium_channel_n_gate_beta_k1 = bnk1
            at start set aidan:potassium_channel_n_gate_beta_k2 = bnk2
            at start set aidan:membrane_fast_sodium_current_m_gate_alpha_k1 = amk1
            at start set aidan:membrane_fast_sodium_current_m_gate_alpha_k2 = amk2
            at start set aidan:membrane_fast_sodium_current_m_gate_alpha_k3 = amk3
            at start set aidan:membrane_fast_sodium_current_m_gate_beta_k1 = bmk1
            at start set aidan:membrane_fast_sodium_current_m_gate_beta_k2 = bmk2
            at start set aidan:membrane_fast_sodium_current_h_gate_alpha_k1 = ahk1
            at start set aidan:membrane_fast_sodium_current_h_gate_alpha_k2 = ahk2
            at start set aidan:membrane_fast_sodium_current_h_gate_beta_k1 = bhk1
            at start set aidan:membrane_fast_sodium_current_h_gate_beta_k2 = bhk2
        }
    }
    # Run of an action potential following depolarization below threshold for full excitation
    simulation sim = timecourse {
    	range time units ms uniform 0:0.01:10
    	modifiers {
    		at start set oxmeta:membrane_voltage = oxmeta:membrane_voltage + depol
    	}
    }
}

outputs {
    time = sim:time  "Time"
    V = sim:membrane_voltage  "Membrane voltage"
    t_prep = prep:time "Time"
    V_prep = prep:membrane_voltage "Membrane voltage"
    G_Na = sim:membrane_effective_fast_sodium_current_conductance
    G_K = sim:membrane_effective_potassium_current_conductance
    G_Na_prep = prep:membrane_effective_fast_sodium_current_conductance
    G_K_prep = prep:membrane_effective_potassium_current_conductance
}

plots {
    plot "SubThreshActionPotential" using lines { V against time }
    plot "SteadyState" using lines { V_prep against t_prep }
}